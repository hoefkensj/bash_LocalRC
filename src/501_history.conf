#!/usr/bin/env bash
# ############################################################################
# # REPO: bash_LocalRC                          AUTHOR: Hoefkens.j@gmail.com #
# # FILE: 501_history.conf                                        2023-04-27 #
# ############################################################################
#

HISTSIZE=-1 
HISTFILESIZE="$HISTSIZE" 
HISTCONTROL=''
function check_function_availeble() {
	local FnName ScriptPath Availeble
	FnName="$1"
	ScriptPath="$2"
	Availeble=false
	if 	[[ $( type -t "$FnName" ) == "function" ]]  ; then
		Availeble=true
	else 	
		[[ -f "$ScriptPath" ]] && source "$ScriptPath" && check_function_availeble $@ 
	fi
	echo "$Availeble"
}
function HISTSTART() {
	local READY
	READY="$(check_function_availeble 'bash_history' '/etc/profile.d/bash_history.sh' )"
	LOUD=0
	[[ $READY -eq true ]] && bash_history start 
}

function HISTSTOP() {
	local READY 
	READY="$(check_function_availeble 'bash_history' '/etc/profile.d/bash_history.sh' )"
	echo "Cleaning up HIST files..." &>0
	[[ $READY -eq true ]]  && bash_history stop &>0
 	sleep 0.1
}

function HISTAPPEND(){
	local LOUD
	[[ -z $1 ]] &&  LOUD="/dev/null"
	bash_history append &>$LOUD
}

function history(){
	local INSTDIR
	

	function main(){
		bash_history full
		builtin history "$@"
		bash_history uniq
	}

	function upgrade(){
		local 
		[[ -z $1 ]] && INSTDIR="/opt/local/git/" || INSTDIR=$1
		mkdir -pv $INSTDIR 
		pushd $INSTDIR
		git clone https://github.com/hoefkensj/bash_history
		cd bash_history
		sh install.sh
		popd
	}

	READY="$(check_function_availeble 'bash_history' '/etc/profile.d/bash_history.sh' )"
	[[ -z "$LOUD" ]] && LOUD="/dev/null"
	case "$1" in
 		--upgrade)     upgrade ;; 
		--debug)       set -o xtrace ;;
		--loud)		   shift 1 && LOUD=0 && history $@ ;;
		--createfiles) shift 1 && bash_history createall ;;	
		--createclean) shift 1 && bash_history createclean ;;
			*)         main $@ ;;
	esac
	unset -f main upgrade installed srcscript

}
trap HISTSTOP EXIT
HISTSTART
[[ "$INSTALLED" == 1 ]] && [[ "${PROMPT_COMMAND}" != *"HISTAPPEND"* ]] && export PROMPT_COMMAND="HISTAPPEND ; ${PROMPT_COMMAND}"
unset INSTALLED LOUD
